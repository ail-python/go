name: Proxy + Firebase CI

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *' # هر ۶ ساعت
    - cron: '0 2 * * *'   # هر روز ساعت ۲ شب

permissions:
  contents: write

jobs:
  run-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Bootstrap Cores (Download Xray/Hiddify)
        run: bash ./bootstrap.sh

      - name: Run the Main Application
        run: python -m src.main

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions-bot@github.com'

      - name: Commit and Push Changes
        run: |
          git add -A subscription/
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update subscriptions on $(date -u)"
            git push origin main
          fi

  deploy-and-scan:
    runs-on: ubuntu-latest
    env:
      REPORT_URL: ${{ secrets.SCAN_REPORT_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system deps
        run: sudo apt-get update && sudo apt-get install -y curl unzip nodejs npm

      - name: Install Python deps
        run: pip install -r requirements.txt

      - name: Authenticate to GCP (optional)
        if: ${{ env.GCP_SA_KEY != '' }}
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          echo "$GCP_SA_KEY" > /tmp/gcp_key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp_key.json
          gcloud config set project "$GCP_PROJECT_ID"

      - name: Deploy Firebase functions + hosting (optional)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        if: ${{ env.FIREBASE_TOKEN != '' }}
        run: |
          cd firebase/functions && npm install || true
          firebase deploy --only functions,hosting --token "$FIREBASE_TOKEN" || true

      - name: Run bootstrap
        run: bash ./bootstrap.sh

      - name: Run smoke scan
        run: python -m run_smoke_scan
        env:
          REPORT_URL: ${{ secrets.SCAN_REPORT_URL || 'https://default-report-url.example.com' }}
          REPORT_API_KEY: ${{ secrets.SCAN_REPORT_API_KEY != '' && secrets.SCAN_REPORT_API_KEY || 'default-api-key' }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: scanner-output
          path: output/**
