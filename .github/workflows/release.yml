# This is the Continuous Release (CR) pipeline.
#
# It runs only when a new release is created in GitHub. It orchestrates the
# build, scan, deployment, and notification process. As its final act, it
# uploads the generated subscription files as release assets, creating a
# permanent and auditable record of the deployment.

name: Continuous Release

on:
  release:
    types: [created]

# Set default permissions for the GITHUB_TOKEN.
# `contents: write` is required to upload release assets.
# `id-token: write` is required for authenticating with Google Cloud.
permissions:
  contents: write
  id-token: write

jobs:
  build_and_scan:
    name: Build, Scan, and Verify
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      proxy_count: ${{ steps.count_proxies.outputs.count }}

    env:
      TCP_TIMEOUT: "3.0"
      HTTP_TIMEOUT: "5.0"
      DOWNLOAD_TIMEOUT: "8.0"
      CONNECTION_TIMEOUT: "4.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ubuntu-latest-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ubuntu-latest-pip-

      - name: Cache Core Binaries
        id: cache-cores
        uses: actions/cache@v3
        with:
          path: ./cores
          key: ubuntu-latest-cores-${{ hashFiles('install.py') }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install application components (cores)
        if: steps.cache-cores.outputs.cache-hit != 'true'
        run: python install.py

      - name: 1. Fetch Subscription Sources
        run: python3 -m src.fetcher

      - name: 2. Test Proxies (Xray)
        run: python3 -m src.xray_tester

      - name: 3. Test Proxies (Hiddify)
        run: python3 -m src.hiddify_tester

      - name: 4. Filter and Generate Lists
        run: python3 -m src.filter

      - name: 5. Generate Final Reports
        run: python3 -m src.reporter

      - name: 6. Self-Verification Gate
        run: python3 scripts/verify_output.py

      - name: Count Proxies
        id: count_proxies
        if: always()
        run: |
          count=$(wc -l < output/all.txt | tr -d ' ')
          echo "Found $count proxies."
          echo "count=$count" >> $GITHUB_OUTPUT

      - name: Upload scan results for other jobs
        uses: actions/upload-artifact@v3
        with:
          name: scan-results
          path: |
            output/
            logs/
          retention-days: 1

  deploy_and_notify:
    name: Deploy and Notify
    needs: build_and_scan
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download scan results
        uses: actions/download-artifact@v3
        with:
          name: scan-results
          path: .

      - name: Deploy to Firebase
        run: |
          chmod +x scripts/deploy_firebase.sh
          ./scripts/deploy_firebase.sh
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Send Rich, Data-Driven FCM Notification
        env:
          PROXY_COUNT: ${{ needs.build_and_scan.outputs.proxy_count }}
        run: |
          TITLE="Proxies Updated"
          BODY="${PROXY_COUNT} new proxies are available!"

          JSON_PAYLOAD=$(cat <<EOF
          {
            "message": {
              "topic": "news",
              "notification": {
                "title": "$TITLE",
                "body": "$BODY"
              },
              "data": {
                "update_type": "proxy_list",
                "proxy_count": "$PROXY_COUNT",
                "timestamp": "$(date +%s)"
              },
              "android": {
                "notification": {
                  "click_action": "PROXY_LIST_UPDATED_ACTIVITY"
                }
              },
              "apns": {
                "payload": {
                  "aps": {
                    "category" : "PROXY_UPDATE_CATEGORY"
                  }
                }
              }
            }
          }
          EOF
          )

          curl -X POST "https://fcm.googleapis.com/v1/projects/${{ secrets.GCP_PROJECT_ID }}/messages:send" \
          -H "Authorization: Bearer $(gcloud auth print-access-token)" \
          -H "Content-Type: application/json" \
          -d "$JSON_PAYLOAD"

  upload_release_assets:
    name: Upload Release Assets
    needs: build_and_scan
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Download scan results
        uses: actions/download-artifact@v3
        with:
          name: scan-results
          path: output

      - name: Upload subscription files to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            output/all.txt
            output/base64_all.txt
