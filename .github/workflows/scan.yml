name: V2Ray Scanner Ultimate - Professional

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */1 * * *"  # Every hour
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  TZ: UTC
  PYTHONUNBUFFERED: "1"
  TCP_TIMEOUT: "3.0"
  HTTP_TIMEOUT: "5.0"
  DOWNLOAD_TIMEOUT: "8.0"
  MIN_SPEED: "200"
  MAX_LATENCY: "300"
  MAX_PACKET_LOSS: "5.0"
  MAX_JITTER: "50.0"
  MIN_SUCCESS_RATE: "70.0"
  MIN_THROUGHPUT: "0.5"
  MAX_WORKERS: "20"
  BATCH_SIZE: "50"
  LOG_LEVEL: "INFO"
  ENABLE_ANTI_BAN: "true"
  REQUEST_DELAY: "0.1"

jobs:
  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        python-version: ['3.11']
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🐍 Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          cores/
        key: ${{ runner.os }}-deps-${{ hashFiles('requirements.txt') }}-${{ hashFiles('bootstrap.sh') }}
        restore-keys: |
          ${{ runner.os }}-deps-

    - name: 🔧 Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget curl unzip ca-certificates bc

    - name: 📋 Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🚀 Setup project
      run: |
        chmod +x bootstrap.sh
        bash bootstrap.sh

    - name: ✅ Verify configuration
      run: python3 -m src.config

    - name: 📥 Fetch subscriptions
      run: python3 -m src.fetcher
      timeout-minutes: 5

    - name: 🧪 Test with Xray Core
      run: python3 -m src.xray_tester
      timeout-minutes: 15
      continue-on-error: true

    - name: 🧪 Test with Hiddify Core
      run: python3 -m src.hiddify_tester
      timeout-minutes: 15
      continue-on-error: true

    - name: 🔍 Filter results
      run: python3 -m src.filter
      timeout-minutes: 5

    - name: 📊 Generate report
      run: python3 -m src.reporter
      timeout-minutes: 3

    - name: 📦 Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: scan-results-${{ github.run_number }}
        path: |
          output/merged_nodes.txt
          output/merged_sub_base64.txt
          output/reports/
          output/stats/
          logs/
        retention-days: 7

    - name: 📈 Update repository
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add output/merged_nodes.txt output/merged_sub_base64.txt output/reports/ output/stats/
        git diff --cached --quiet || git commit -m "🚀 Auto-update configs - Run #${{ github.run_number }}"
        git push
      continue-on-error: true

    - name: 🎯 Success notification
      if: success()
      run: |
        echo "✅ Scan completed successfully!"
        echo "📊 Results saved to artifacts"

    - name: ⚠️ Failure notification
      if: failure()
      run: |
        echo "❌ Scan failed!"
        exit 1
